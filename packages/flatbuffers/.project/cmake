#!/bin/bash

set -eu
set -o pipefail

SDPATH="$(dirname "${BASH_SOURCE[0]}")"
if [[ ! -d "${SDPATH}" ]]; then SDPATH="${PWD}"; fi
readonly SDPATH="$(cd -P "${SDPATH}" && pwd)"

readonly PRJ_PATH="${SDPATH}"
source "${PRJ_PATH}/conf"

cd "${BLD_PATH}"; echo + cd ${PWD}

echo
CMD="cmake -G 'Unix Makefiles'"
CMD+=" -DCMAKE_BUILD_TYPE=RelWithDebInfo"
CMD+=" -DFLATBUFFERS_BUILD_SHAREDLIB=true"
CMD+=" -DFLATBUFFERS_BUILD_CPP17=true"
CMD+=" -DCMAKE_EXPORT_COMPILE_COMMANDS=true"
CMD+=" -DCMAKE_INSTALL_PREFIX=/usr/local/stow/${STOW_NAME}"
CMD+=" ${SRC_PATH}"
echo + ${CMD} && eval ${CMD}

# compile_commands.json generated by cmake is used by clang tools
# and clang does not support implicit-fallthrough levels.
# So striping implicit-fallthrough levels with sed.
# see https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/
echo
CMD="sed -i"
CMD+=" -E '"'s/(-Werror=implicit-fallthrough)=2/\1/'"'"
CMD+=" ${PKG_PATH}/build/compile_commands.json"
echo + ${CMD} && eval ${CMD}
